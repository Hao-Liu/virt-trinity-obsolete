#!/usr/bin/env python


import os
import sys

# simple magic for using scripts within a source tree
base_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
if os.path.isdir(os.path.join(base_dir, 'virtTrinity')):
    sys.path.insert(0, base_dir)


from virtTrinity import virsh
from virtTrinity import utils


def iter_command(command):
    """Iterate through all possible combinated command lines
    for a virsh sub command *command*.

    :param command: A virsh sub command to be iterated.
    :type command: str.
    """
    vsh = virsh.Virsh()
    cmdline_generator = vsh.cmdline_generator(command)
    for counter, cmd_line in enumerate(cmdline_generator):
        print counter,
        result = utils.run(cmd_line, timeout=1.0)
        result.pprint()


def fuzzer():
    """A fuzzer continuously run random virsh commands.
    """
    vsh = virsh.Virsh()
    try:
        counter = 0
        stat = {}
        while True:
            cmd_line = vsh.get_random_cmdline()
            result = utils.run(cmd_line, timeout=1.0)
            result.pprint()

            counter += 1
            res = result.exit_status
            if res in stat:
                stat[res] += 1
            else:
                stat[res] = 1

    except KeyboardInterrupt:
        print
        print 'Statistics'
        print '----------'
        print
        print 'Test count   : %s' % counter
        if 0 in stat:
            print 'Success count: %s' % stat[0]
            print 'Success rate : %s' % (stat[0] / float(counter))
        if None in stat:
            print 'Timeout count: %s' % stat[None]


if __name__ == '__main__':
    fuzzer()
